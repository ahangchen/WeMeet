"""
Django settings for WeMeet project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
from student.ctrl.mail_settings import *  # 邮件配置文件
import os
import logging
logging.basicConfig(
    level=logging.DEBUG,
    format = '%(asctime)s %(levelname)s %(message)s',
)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wem-)!y!!z36(fl3!uf064gxj9an!#_sijqvdc1o04f_m!-efq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False 

ALLOWED_HOSTS = ['*']


# Application definition
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = (
    'x-requested-with',
    'content-type',
    'accept',
    'origin',
    'authorization',
    'x-csrftoken',
    'Access-Control-Allow-Origin',
    'Access-Control-Allow-Credentials'
)

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'team',
    'student',

    # haystack 搜索模块,使用whoosh作为搜索引擎
    'haystack',
    'corsheaders',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WeMeet.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WeMeet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'wemeet',
        'USER': 'wemeet',
        'PASSWORD': 'wmms233',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'


TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


HAYSTACK_CONNECTIONS = {
    'default':{
        'ENGINE': 'whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    },
}

HAYSTACK_SIGNAL_PROCESSOR = "haystack.signals.RealtimeSignalProcessor"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(levelname)s %(asctime)s %(module)s %(message)s'
        },
    },
    'handlers': {
        'info_f': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR+'/log/stu/info.log',
            'formatter': 'simple'
        },
        'warning_f': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR+'/log/stu/warning.log',
            'formatter': 'simple'
        },
        'error_f': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR+'/log/stu/error.log',
            'formatter': 'simple',
        },
        'console':{
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'team_info':{
            'level': 'INFO',
            'class': 'team.util.log.InfoFileHandler',
            'filename': BASE_DIR + '/log/team/info.log',
            'formatter': 'simple'
        },
        'team_warning': {
            'level': 'WARNING',
            'class': 'team.util.log.WarningFileHandler',
            'filename': BASE_DIR + '/log/team/warning.log',
            'formatter': 'simple'
        },
        'team_error': {
            'level': 'ERROR',
            'class': 'team.util.log.ErrorFileHandler',
            'filename': BASE_DIR + '/log/team/error.log',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'wemeet.stu': {
            'handlers': ['warning_f', 'error_f', 'info_f'],
            'level': 'INFO',
            'propagate': False,
        },
        'wemeet.team': {
            'handlers': ['console','team_info','team_warning','team_error'],
            'level': 'INFO',
            'propagate': False,
        },
    }
}
